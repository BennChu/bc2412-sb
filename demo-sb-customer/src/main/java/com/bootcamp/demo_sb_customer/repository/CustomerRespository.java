package com.bootcamp.demo_sb_customer.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import com.bootcamp.demo_sb_customer.entity.CustomerEntity;
import java.util.List;


// JPA + Driver (Postgresql)
// Hibernate generates the implementation class, which implements "CustomerRespository"

            // crud, create read update delete operation
@Repository //Respository bean
public interface CustomerRespository extends JpaRepository<CustomerEntity, Long> {
    
    // During maven compilation, the implementation class is generated by Hibernate
    
    
    // save
    // saveAll
    // findAll
    // deleteById
    // findById

    // select * from customers where name = 'John';
    // 唔一定搵到, 可以搵唔到, 所以 optional, return 一個 object, object 內可以冇野 null, isPresent
    // List 可以 empty List
    // findById, 可


    // practice Date format local date

    // JPA method, 有好多內置 method
    // controller -> service ->
    // how about return List?
    // return 做一個 List, bcoz maybe more than one same name
    List<CustomerEntity> findByName(String name);

    // support both and & or
    // SELECT * FROM customer WHERE name = ? AND email = ?
    List<CustomerEntity> findByNameAndEmail(String name, String email);

    // CustomerEntity has id, name, email
    // this is or
    List<CustomerEntity> findByNameOrEmail(String name, String email);


    // ! JPQL (Entity), CustomerEntity is excatly same as the Entity class name
    // compile time spring boot will check
    @Query(value = "select c from CustomerEntity c where c.name = :name", nativeQuery = false) //
    List<CustomerEntity> findByNameByJPQL(@Param ("name") String customerName); // @Param ("name") -> :name, if i change :name to :name1, will start server fail
    

    // ! native Query 就真係 SQL case insensitive language, database 有序, map 唔係跟次序
    // product specific 
    // SQL exception, compile time check 唔到, run 先 error
    @Query(value = "select c.* from customers where c.name = :name", nativeQuery = true)
    List<CustomerEntity> findByNameByNativeQuery(@Param ("name") String customerName);

    // MyBatic SQL similar to JPQL

    // Optional<CustomerEntity> List<CustomerEntity> findByIdOrEmail(Long id, String email);
}
